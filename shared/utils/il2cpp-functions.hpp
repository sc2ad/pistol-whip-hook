#ifndef IL2CPP_FUNCTIONS_H
#define IL2CPP_FUNCTIONS_H

#include <stdio.h>
#include <stdlib.h>
#include <dlfcn.h>
#include "typedefs.h"
#include "logging.h"
#include "utils.h"

namespace il2cpp_functions {
	static void (*init)(const char* domain_name);
	static void (*init_utf16)(const Il2CppChar * domain_name);
	static void (*shutdown)();
	static void (*set_config_dir)(const char *config_path);
	static void (*set_data_dir)(const char *data_path);
	static void (*set_temp_dir)(const char *temp_path);
	static void (*set_commandline_arguments)(int argc, const char* const argv[], const char* basedir);
	static void (*set_commandline_arguments_utf16)(int argc, const Il2CppChar * const argv[], const char* basedir);
	static void (*set_config_utf16)(const Il2CppChar * executablePath);
	static void (*set_config)(const char* executablePath);
	static void (*set_memory_callbacks)(Il2CppMemoryCallbacks * callbacks);
	static const Il2CppImage* (*get_corlib)();
	static void (*add_internal_call)(const char* name, Il2CppMethodPointer method);
	static Il2CppMethodPointer (*resolve_icall)(const char* name);
	static void* (*alloc)(size_t size);
	static void (*free)(void* ptr);
	static Il2CppClass* (*array_class_get)(Il2CppClass * element_class, uint32_t rank);
	static uint32_t (*array_length)(Il2CppArray * array);
	static uint32_t (*array_get_byte_length)(Il2CppArray * array);
	static Il2CppArray* (*array_new)(Il2CppClass * elementTypeInfo, il2cpp_array_size_t length);
	static Il2CppArray* (*array_new_specific)(Il2CppClass * arrayTypeInfo, il2cpp_array_size_t length);
	static Il2CppArray* (*array_new_full)(Il2CppClass * array_class, il2cpp_array_size_t * lengths, il2cpp_array_size_t * lower_bounds);
	static Il2CppClass* (*bounded_array_class_get)(Il2CppClass * element_class, uint32_t rank, bool bounded);
	static int (*array_element_size)(const Il2CppClass * array_class);
	static const Il2CppImage* (*assembly_get_image)(const Il2CppAssembly * assembly);
	static const Il2CppType* (*class_enum_basetype)(Il2CppClass * klass);
	static bool (*class_is_generic)(const Il2CppClass * klass);
	static bool (*class_is_inflated)(const Il2CppClass * klass);
	static bool (*class_is_assignable_from)(Il2CppClass * klass, Il2CppClass * oklass);
	static bool (*class_is_subclass_of)(Il2CppClass * klass, Il2CppClass * klassc, bool check_interfaces);
	static bool (*class_has_parent)(Il2CppClass * klass, Il2CppClass * klassc);
	static Il2CppClass* (*class_from_il2cpp_type)(const Il2CppType * type);
	static Il2CppClass* (*class_from_name)(const Il2CppImage * image, const char* namespaze, const char *name);
	static Il2CppClass* (*class_from_system_type)(Il2CppReflectionType * type);
	static Il2CppClass* (*class_get_element_class)(Il2CppClass * klass);
	static const EventInfo* (*class_get_events)(Il2CppClass * klass, void* *iter);
	static FieldInfo* (*class_get_fields)(Il2CppClass * klass, void* *iter);
	static Il2CppClass* (*class_get_nested_types)(Il2CppClass * klass, void* *iter);
	static Il2CppClass* (*class_get_interfaces)(Il2CppClass * klass, void* *iter);
	static const PropertyInfo* (*class_get_properties)(Il2CppClass * klass, void* *iter);
	static const PropertyInfo* (*class_get_property_from_name)(Il2CppClass * klass, const char *name);
	static FieldInfo* (*class_get_field_from_name)(Il2CppClass * klass, const char *name);
	static const MethodInfo* (*class_get_methods)(Il2CppClass * klass, void* *iter);
	static const MethodInfo* (*class_get_method_from_name)(Il2CppClass * klass, const char* name, int argsCount);
	static const char* (*class_get_name)(Il2CppClass * klass);
	static const char* (*class_get_namespace)(Il2CppClass * klass);
	static Il2CppClass* (*class_get_parent)(Il2CppClass * klass);
	static Il2CppClass* (*class_get_declaring_type)(Il2CppClass * klass);
	static int32_t (*class_instance_size)(Il2CppClass * klass);
	static size_t (*class_num_fields)(const Il2CppClass * enumKlass);
	static bool (*class_is_valuetype)(const Il2CppClass * klass);
	static int32_t (*class_value_size)(Il2CppClass * klass, uint32_t * align);
	static bool (*class_is_blittable)(const Il2CppClass * klass);
	static int (*class_get_flags)(const Il2CppClass * klass);
	static bool (*class_is_abstract)(const Il2CppClass * klass);
	static bool (*class_is_interface)(const Il2CppClass * klass);
	static int (*class_array_element_size)(const Il2CppClass * klass);
	static Il2CppClass* (*class_from_type)(const Il2CppType * type);
	static const Il2CppType* (*class_get_type)(Il2CppClass * klass);
	static uint32_t (*class_get_type_token)(Il2CppClass * klass);
	static bool (*class_has_attribute)(Il2CppClass * klass, Il2CppClass * attr_class);
	static bool (*class_has_references)(Il2CppClass * klass);
	static bool (*class_is_enum)(const Il2CppClass * klass);
	static const Il2CppImage* (*class_get_image)(Il2CppClass * klass);
	static const char* (*class_get_assemblyname)(const Il2CppClass * klass);
	static int (*class_get_rank)(const Il2CppClass * klass);
	static size_t (*class_get_bitmap_size)(const Il2CppClass * klass);
	static void (*class_get_bitmap)(Il2CppClass * klass, size_t * bitmap);
	static bool (*stats_dump_to_file)(const char *path);
	static uint64_t (*stats_get_value)(Il2CppStat stat);
	static Il2CppDomain* (*domain_get)();
	static const Il2CppAssembly* (*domain_assembly_open)(Il2CppDomain * domain, const char* name);
	static const Il2CppAssembly** (*domain_get_assemblies)(const Il2CppDomain * domain, size_t * size);
	static Il2CppException* (*exception_from_name_msg)(const Il2CppImage * image, const char *name_space, const char *name, const char *msg);
	static Il2CppException* (*get_exception_argument_null)(const char *arg);
	static void (*format_exception)(const Il2CppException * ex, char* message, int message_size);
	static void (*format_stack_trace)(const Il2CppException * ex, char* output, int output_size);
	static void (*unhandled_exception)(Il2CppException*);
	static int (*field_get_flags)(FieldInfo * field);
	static const char* (*field_get_name)(FieldInfo * field);
	static Il2CppClass* (*field_get_parent)(FieldInfo * field);
	static size_t (*field_get_offset)(FieldInfo * field);
	static const Il2CppType* (*field_get_type)(FieldInfo * field);
	static void (*field_get_value)(Il2CppObject * obj, FieldInfo * field, void *value);
	static Il2CppObject* (*field_get_value_object)(FieldInfo * field, Il2CppObject * obj);
	static bool (*field_has_attribute)(FieldInfo * field, Il2CppClass * attr_class);
	static void (*field_set_value)(Il2CppObject * obj, FieldInfo * field, void *value);
	static void (*field_static_get_value)(FieldInfo * field, void *value);
	static void (*field_static_set_value)(FieldInfo * field, void *value);
	static void (*field_set_value_object)(Il2CppObject * instance, FieldInfo * field, Il2CppObject * value);
	static void (*gc_collect)(int maxGenerations);
	static int32_t (*gc_collect_a_little)();
	static void (*gc_disable)();
	static void (*gc_enable)();
	static bool (*gc_is_disabled)();
	static int64_t (*gc_get_used_size)();
	static int64_t (*gc_get_heap_size)();
	static void (*gc_wbarrier_set_field)(Il2CppObject * obj, void **targetAddress, void *object);
	static uint32_t (*gchandle_new)(Il2CppObject * obj, bool pinned);
	static uint32_t (*gchandle_new_weakref)(Il2CppObject * obj, bool track_resurrection);
	static Il2CppObject* (*gchandle_get_target )(uint32_t gchandle);
	static void (*gchandle_free)(uint32_t gchandle);
	static void* (*unity_liveness_calculation_begin)(Il2CppClass * filter, int max_object_count, il2cpp_register_object_callback callback, void* userdata, il2cpp_WorldChangedCallback onWorldStarted, il2cpp_WorldChangedCallback onWorldStopped);
	static void (*unity_liveness_calculation_end)(void* state);
	static void (*unity_liveness_calculation_from_root)(Il2CppObject * root, void* state);
	static void (*unity_liveness_calculation_from_statics)(void* state);
	static const Il2CppType* (*method_get_return_type)(const MethodInfo * method);
	static Il2CppClass* (*method_get_declaring_type)(const MethodInfo * method);
	static const char* (*method_get_name)(const MethodInfo * method);
	static const MethodInfo* (*method_get_from_reflection)(const Il2CppReflectionMethod * method);
	static Il2CppReflectionMethod* (*method_get_object)(const MethodInfo * method, Il2CppClass * refclass);
	static bool (*method_is_generic)(const MethodInfo * method);
	static bool (*method_is_inflated)(const MethodInfo * method);
	static bool (*method_is_instance)(const MethodInfo * method);
	static uint32_t (*method_get_param_count)(const MethodInfo * method);
	static const Il2CppType* (*method_get_param)(const MethodInfo * method, uint32_t index);
	static Il2CppClass* (*method_get_class)(const MethodInfo * method);
	static bool (*method_has_attribute)(const MethodInfo * method, Il2CppClass * attr_class);
	static uint32_t (*method_get_flags)(const MethodInfo * method, uint32_t * iflags);
	static uint32_t (*method_get_token)(const MethodInfo * method);
	static const char* (*method_get_param_name)(const MethodInfo * method, uint32_t index);
	static void (*profiler_install)(Il2CppProfiler * prof, Il2CppProfileFunc shutdown_callback);
	static void (*profiler_set_events)(Il2CppProfileFlags events);
	static void (*profiler_install_enter_leave)(Il2CppProfileMethodFunc enter, Il2CppProfileMethodFunc fleave);
	static void (*profiler_install_allocation)(Il2CppProfileAllocFunc callback);
	static void (*profiler_install_gc)(Il2CppProfileGCFunc callback, Il2CppProfileGCResizeFunc heap_resize_callback);
	static void (*profiler_install_fileio)(Il2CppProfileFileIOFunc callback);
	static void (*profiler_install_thread)(Il2CppProfileThreadFunc start, Il2CppProfileThreadFunc end);
	static uint32_t (*property_get_flags)(PropertyInfo * prop);
	static const MethodInfo* (*property_get_get_method)(PropertyInfo * prop);
	static const MethodInfo* (*property_get_set_method)(PropertyInfo * prop);
	static const char* (*property_get_name)(PropertyInfo * prop);
	static Il2CppClass* (*property_get_parent)(PropertyInfo * prop);
	static Il2CppClass* (*object_get_class)(Il2CppObject * obj);
	static uint32_t (*object_get_size)(Il2CppObject * obj);
	static const MethodInfo* (*object_get_virtual_method)(Il2CppObject * obj, const MethodInfo * method);
	static Il2CppObject* (*object_new)(const Il2CppClass * klass);
	static void* (*object_unbox)(Il2CppObject * obj);
	static Il2CppObject* (*value_box)(Il2CppClass * klass, void* data);
	static void (*monitor_enter)(Il2CppObject * obj);
	static bool (*monitor_try_enter)(Il2CppObject * obj, uint32_t timeout);
	static void (*monitor_exit)(Il2CppObject * obj);
	static void (*monitor_pulse)(Il2CppObject * obj);
	static void (*monitor_pulse_all)(Il2CppObject * obj);
	static void (*monitor_wait)(Il2CppObject * obj);
	static bool (*monitor_try_wait)(Il2CppObject * obj, uint32_t timeout);
	static Il2CppObject* (*runtime_invoke)(const MethodInfo * method, void *obj, void **params, Il2CppException **exc);
	static Il2CppObject* (*runtime_invoke_convert_args)(const MethodInfo * method, void *obj, Il2CppObject **params, int paramCount, Il2CppException **exc);
	static void (*runtime_class_init)(Il2CppClass * klass);
	static void (*runtime_object_init)(Il2CppObject * obj);
	static void (*runtime_object_init_exception)(Il2CppObject * obj, Il2CppException** exc);
	static void (*runtime_unhandled_exception_policy_set)(Il2CppRuntimeUnhandledExceptionPolicy value);
	static int32_t (*string_length)(Il2CppString * str);
	static Il2CppChar* (*string_chars)(Il2CppString * str);
	static Il2CppString* (*string_new)(const char* str);
	static Il2CppString* (*string_new_len)(const char* str, uint32_t length);
	static Il2CppString* (*string_new_utf16)(const Il2CppChar * text, int32_t len);
	static Il2CppString* (*string_new_wrapper)(const char* str);
	static Il2CppString* (*string_intern)(Il2CppString * str);
	static Il2CppString* (*string_is_interned)(Il2CppString * str);
	static Il2CppThread* (*thread_current)();
	static Il2CppThread* (*thread_attach)(Il2CppDomain * domain);
	static void (*thread_detach)(Il2CppThread * thread);
	static Il2CppThread** (*thread_get_all_attached_threads)(size_t * size);
	static bool (*is_vm_thread)(Il2CppThread * thread);
	static void (*current_thread_walk_frame_stack)(Il2CppFrameWalkFunc func, void* user_data);
	static void (*thread_walk_frame_stack)(Il2CppThread * thread, Il2CppFrameWalkFunc func, void* user_data);
	static bool (*current_thread_get_top_frame)(Il2CppStackFrameInfo * frame);
	static bool (*thread_get_top_frame)(Il2CppThread * thread, Il2CppStackFrameInfo * frame);
	static bool (*current_thread_get_frame_at)(int32_t offset, Il2CppStackFrameInfo * frame);
	static bool (*thread_get_frame_at)(Il2CppThread * thread, int32_t offset, Il2CppStackFrameInfo * frame);
	static int32_t (*current_thread_get_stack_depth)();
	static int32_t (*thread_get_stack_depth)(Il2CppThread * thread);
	static Il2CppObject* (*type_get_object)(const Il2CppType * type);
	static int (*type_get_type)(const Il2CppType * type);
	static Il2CppClass* (*type_get_class_or_element_class)(const Il2CppType * type);
	static char* (*type_get_name)(const Il2CppType * type);
	static bool (*type_is_byref)(const Il2CppType * type);
	static uint32_t (*type_get_attrs)(const Il2CppType * type);
	static bool (*type_equals)(const Il2CppType * type, const Il2CppType * otherType);
	static char* (*type_get_assembly_qualified_name)(const Il2CppType * type);
	static const Il2CppAssembly* (*image_get_assembly)(const Il2CppImage * image);
	static const char* (*image_get_name)(const Il2CppImage * image);
	static const char* (*image_get_filename)(const Il2CppImage * image);
	static const MethodInfo* (*image_get_entry_point)(const Il2CppImage * image);
	static size_t (*image_get_class_count)(const Il2CppImage * image);
	static const Il2CppClass* (*image_get_class)(const Il2CppImage * image, size_t index);
	static Il2CppManagedMemorySnapshot* (*capture_memory_snapshot)();
	static void (*free_captured_memory_snapshot)(Il2CppManagedMemorySnapshot * snapshot);
	static void (*set_find_plugin_callback)(Il2CppSetFindPlugInCallback method);
	static void (*register_log_callback)(Il2CppLogCallback method);
	static void (*debugger_set_agent_options)(const char* options);
	static bool (*is_debugger_attached)();
	static void (*unity_install_unitytls_interface)(const void* unitytlsInterfaceStruct);
	static Il2CppCustomAttrInfo* (*custom_attrs_from_class)(Il2CppClass * klass);
	static Il2CppCustomAttrInfo* (*custom_attrs_from_method)(const MethodInfo * method);
	static Il2CppObject* (*custom_attrs_get_attr)(Il2CppCustomAttrInfo * ainfo, Il2CppClass * attr_klass);
	static bool (*custom_attrs_has_attr)(Il2CppCustomAttrInfo * ainfo, Il2CppClass * attr_klass);
	static Il2CppArray* (*custom_attrs_construct)(Il2CppCustomAttrInfo * cinfo);
	static void (*custom_attrs_free)(Il2CppCustomAttrInfo * ainfo);

	// MANUALLY DEFINED CONST DEFINITIONS
	static const Il2CppType* (*class_get_type_const)(const Il2CppClass * klass);
	static const char* (*class_get_name_const)(const Il2CppClass * klass);

	// Whether all of the il2cpp functions have been initialized or not
    static bool initialized = false;
    // Initializes all of the IL2CPP functions via dlopen and dlsym for use.
    static void Init() {
        if (initialized) return;
        log_print(INFO, "il2cpp_functions: Init: Initializing all IL2CPP Functions...");
        void *imagehandle = dlopen(IL2CPP_SO_PATH, RTLD_LOCAL | RTLD_LAZY);

		*(void**)(&init) = dlsym(imagehandle, "il2cpp_init");
		log_print(INFO, "Loaded: il2cpp_init");
		*(void**)(&init_utf16) = dlsym(imagehandle, "il2cpp_init_utf16");
		log_print(INFO, "Loaded: il2cpp_init_utf16");
		*(void**)(&shutdown) = dlsym(imagehandle, "il2cpp_shutdown");
		log_print(INFO, "Loaded: il2cpp_shutdown");
		*(void**)(&set_config_dir) = dlsym(imagehandle, "il2cpp_set_config_dir");
		log_print(INFO, "Loaded: il2cpp_set_config_dir");
		*(void**)(&set_data_dir) = dlsym(imagehandle, "il2cpp_set_data_dir");
		log_print(INFO, "Loaded: il2cpp_set_data_dir");
		*(void**)(&set_temp_dir) = dlsym(imagehandle, "il2cpp_set_temp_dir");
		log_print(INFO, "Loaded: il2cpp_set_temp_dir");
		*(void**)(&set_commandline_arguments) = dlsym(imagehandle, "il2cpp_set_commandline_arguments");
		log_print(INFO, "Loaded: il2cpp_set_commandline_arguments");
		*(void**)(&set_commandline_arguments_utf16) = dlsym(imagehandle, "il2cpp_set_commandline_arguments_utf16");
		log_print(INFO, "Loaded: il2cpp_set_commandline_arguments_utf16");
		*(void**)(&set_config_utf16) = dlsym(imagehandle, "il2cpp_set_config_utf16");
		log_print(INFO, "Loaded: il2cpp_set_config_utf16");
		*(void**)(&set_config) = dlsym(imagehandle, "il2cpp_set_config");
		log_print(INFO, "Loaded: il2cpp_set_config");
		*(void**)(&set_memory_callbacks) = dlsym(imagehandle, "il2cpp_set_memory_callbacks");
		log_print(INFO, "Loaded: il2cpp_set_memory_callbacks");
		*(void**)(&get_corlib) = dlsym(imagehandle, "il2cpp_get_corlib");
		log_print(INFO, "Loaded: il2cpp_get_corlib");
		*(void**)(&add_internal_call) = dlsym(imagehandle, "il2cpp_add_internal_call");
		log_print(INFO, "Loaded: il2cpp_add_internal_call");
		*(void**)(&resolve_icall) = dlsym(imagehandle, "il2cpp_resolve_icall");
		log_print(INFO, "Loaded: il2cpp_resolve_icall");
		*(void**)(&alloc) = dlsym(imagehandle, "il2cpp_alloc");
		log_print(INFO, "Loaded: il2cpp_alloc");
		*(void**)(&free) = dlsym(imagehandle, "il2cpp_free");
		log_print(INFO, "Loaded: il2cpp_free");
		*(void**)(&array_class_get) = dlsym(imagehandle, "il2cpp_array_class_get");
		log_print(INFO, "Loaded: il2cpp_array_class_get");
		*(void**)(&array_length) = dlsym(imagehandle, "il2cpp_array_length");
		log_print(INFO, "Loaded: il2cpp_array_length");
		*(void**)(&array_get_byte_length) = dlsym(imagehandle, "il2cpp_array_get_byte_length");
		log_print(INFO, "Loaded: il2cpp_array_get_byte_length");
		*(void**)(&array_new) = dlsym(imagehandle, "il2cpp_array_new");
		log_print(INFO, "Loaded: il2cpp_array_new");
		*(void**)(&array_new_specific) = dlsym(imagehandle, "il2cpp_array_new_specific");
		log_print(INFO, "Loaded: il2cpp_array_new_specific");
		*(void**)(&array_new_full) = dlsym(imagehandle, "il2cpp_array_new_full");
		log_print(INFO, "Loaded: il2cpp_array_new_full");
		*(void**)(&bounded_array_class_get) = dlsym(imagehandle, "il2cpp_bounded_array_class_get");
		log_print(INFO, "Loaded: il2cpp_bounded_array_class_get");
		*(void**)(&array_element_size) = dlsym(imagehandle, "il2cpp_array_element_size");
		log_print(INFO, "Loaded: il2cpp_array_element_size");
		*(void**)(&assembly_get_image) = dlsym(imagehandle, "il2cpp_assembly_get_image");
		log_print(INFO, "Loaded: il2cpp_assembly_get_image");
		*(void**)(&class_enum_basetype) = dlsym(imagehandle, "il2cpp_class_enum_basetype");
		log_print(INFO, "Loaded: il2cpp_class_enum_basetype");
		*(void**)(&class_is_generic) = dlsym(imagehandle, "il2cpp_class_is_generic");
		log_print(INFO, "Loaded: il2cpp_class_is_generic");
		*(void**)(&class_is_inflated) = dlsym(imagehandle, "il2cpp_class_is_inflated");
		log_print(INFO, "Loaded: il2cpp_class_is_inflated");
		*(void**)(&class_is_assignable_from) = dlsym(imagehandle, "il2cpp_class_is_assignable_from");
		log_print(INFO, "Loaded: il2cpp_class_is_assignable_from");
		*(void**)(&class_is_subclass_of) = dlsym(imagehandle, "il2cpp_class_is_subclass_of");
		log_print(INFO, "Loaded: il2cpp_class_is_subclass_of");
		*(void**)(&class_has_parent) = dlsym(imagehandle, "il2cpp_class_has_parent");
		log_print(INFO, "Loaded: il2cpp_class_has_parent");
		*(void**)(&class_from_il2cpp_type) = dlsym(imagehandle, "il2cpp_class_from_il2cpp_type");
		log_print(INFO, "Loaded: il2cpp_class_from_il2cpp_type");
		*(void**)(&class_from_name) = dlsym(imagehandle, "il2cpp_class_from_name");
		log_print(INFO, "Loaded: il2cpp_class_from_name");
		*(void**)(&class_from_system_type) = dlsym(imagehandle, "il2cpp_class_from_system_type");
		log_print(INFO, "Loaded: il2cpp_class_from_system_type");
		*(void**)(&class_get_element_class) = dlsym(imagehandle, "il2cpp_class_get_element_class");
		log_print(INFO, "Loaded: il2cpp_class_get_element_class");
		*(void**)(&class_get_events) = dlsym(imagehandle, "il2cpp_class_get_events");
		log_print(INFO, "Loaded: il2cpp_class_get_events");
		*(void**)(&class_get_fields) = dlsym(imagehandle, "il2cpp_class_get_fields");
		log_print(INFO, "Loaded: il2cpp_class_get_fields");
		*(void**)(&class_get_nested_types) = dlsym(imagehandle, "il2cpp_class_get_nested_types");
		log_print(INFO, "Loaded: il2cpp_class_get_nested_types");
		*(void**)(&class_get_interfaces) = dlsym(imagehandle, "il2cpp_class_get_interfaces");
		log_print(INFO, "Loaded: il2cpp_class_get_interfaces");
		*(void**)(&class_get_properties) = dlsym(imagehandle, "il2cpp_class_get_properties");
		log_print(INFO, "Loaded: il2cpp_class_get_properties");
		*(void**)(&class_get_property_from_name) = dlsym(imagehandle, "il2cpp_class_get_property_from_name");
		log_print(INFO, "Loaded: il2cpp_class_get_property_from_name");
		*(void**)(&class_get_field_from_name) = dlsym(imagehandle, "il2cpp_class_get_field_from_name");
		log_print(INFO, "Loaded: il2cpp_class_get_field_from_name");
		*(void**)(&class_get_methods) = dlsym(imagehandle, "il2cpp_class_get_methods");
		log_print(INFO, "Loaded: il2cpp_class_get_methods");
		*(void**)(&class_get_method_from_name) = dlsym(imagehandle, "il2cpp_class_get_method_from_name");
		log_print(INFO, "Loaded: il2cpp_class_get_method_from_name");
		*(void**)(&class_get_name) = dlsym(imagehandle, "il2cpp_class_get_name");
		log_print(INFO, "Loaded: il2cpp_class_get_name");
		*(void**)(&class_get_namespace) = dlsym(imagehandle, "il2cpp_class_get_namespace");
		log_print(INFO, "Loaded: il2cpp_class_get_namespace");
		*(void**)(&class_get_parent) = dlsym(imagehandle, "il2cpp_class_get_parent");
		log_print(INFO, "Loaded: il2cpp_class_get_parent");
		*(void**)(&class_get_declaring_type) = dlsym(imagehandle, "il2cpp_class_get_declaring_type");
		log_print(INFO, "Loaded: il2cpp_class_get_declaring_type");
		*(void**)(&class_instance_size) = dlsym(imagehandle, "il2cpp_class_instance_size");
		log_print(INFO, "Loaded: il2cpp_class_instance_size");
		*(void**)(&class_num_fields) = dlsym(imagehandle, "il2cpp_class_num_fields");
		log_print(INFO, "Loaded: il2cpp_class_num_fields");
		*(void**)(&class_is_valuetype) = dlsym(imagehandle, "il2cpp_class_is_valuetype");
		log_print(INFO, "Loaded: il2cpp_class_is_valuetype");
		*(void**)(&class_value_size) = dlsym(imagehandle, "il2cpp_class_value_size");
		log_print(INFO, "Loaded: il2cpp_class_value_size");
		*(void**)(&class_is_blittable) = dlsym(imagehandle, "il2cpp_class_is_blittable");
		log_print(INFO, "Loaded: il2cpp_class_is_blittable");
		*(void**)(&class_get_flags) = dlsym(imagehandle, "il2cpp_class_get_flags");
		log_print(INFO, "Loaded: il2cpp_class_get_flags");
		*(void**)(&class_is_abstract) = dlsym(imagehandle, "il2cpp_class_is_abstract");
		log_print(INFO, "Loaded: il2cpp_class_is_abstract");
		*(void**)(&class_is_interface) = dlsym(imagehandle, "il2cpp_class_is_interface");
		log_print(INFO, "Loaded: il2cpp_class_is_interface");
		*(void**)(&class_array_element_size) = dlsym(imagehandle, "il2cpp_class_array_element_size");
		log_print(INFO, "Loaded: il2cpp_class_array_element_size");
		*(void**)(&class_from_type) = dlsym(imagehandle, "il2cpp_class_from_type");
		log_print(INFO, "Loaded: il2cpp_class_from_type");
		*(void**)(&class_get_type) = dlsym(imagehandle, "il2cpp_class_get_type");
		log_print(INFO, "Loaded: il2cpp_class_get_type");
		*(void**)(&class_get_type_token) = dlsym(imagehandle, "il2cpp_class_get_type_token");
		log_print(INFO, "Loaded: il2cpp_class_get_type_token");
		*(void**)(&class_has_attribute) = dlsym(imagehandle, "il2cpp_class_has_attribute");
		log_print(INFO, "Loaded: il2cpp_class_has_attribute");
		*(void**)(&class_has_references) = dlsym(imagehandle, "il2cpp_class_has_references");
		log_print(INFO, "Loaded: il2cpp_class_has_references");
		*(void**)(&class_is_enum) = dlsym(imagehandle, "il2cpp_class_is_enum");
		log_print(INFO, "Loaded: il2cpp_class_is_enum");
		*(void**)(&class_get_image) = dlsym(imagehandle, "il2cpp_class_get_image");
		log_print(INFO, "Loaded: il2cpp_class_get_image");
		*(void**)(&class_get_assemblyname) = dlsym(imagehandle, "il2cpp_class_get_assemblyname");
		log_print(INFO, "Loaded: il2cpp_class_get_assemblyname");
		*(void**)(&class_get_rank) = dlsym(imagehandle, "il2cpp_class_get_rank");
		log_print(INFO, "Loaded: il2cpp_class_get_rank");
		*(void**)(&class_get_bitmap_size) = dlsym(imagehandle, "il2cpp_class_get_bitmap_size");
		log_print(INFO, "Loaded: il2cpp_class_get_bitmap_size");
		*(void**)(&class_get_bitmap) = dlsym(imagehandle, "il2cpp_class_get_bitmap");
		log_print(INFO, "Loaded: il2cpp_class_get_bitmap");
		*(void**)(&stats_dump_to_file) = dlsym(imagehandle, "il2cpp_stats_dump_to_file");
		log_print(INFO, "Loaded: il2cpp_stats_dump_to_file");
		*(void**)(&stats_get_value) = dlsym(imagehandle, "il2cpp_stats_get_value");
		log_print(INFO, "Loaded: il2cpp_stats_get_value");
		*(void**)(&domain_get) = dlsym(imagehandle, "il2cpp_domain_get");
		log_print(INFO, "Loaded: il2cpp_domain_get");
		*(void**)(&domain_assembly_open) = dlsym(imagehandle, "il2cpp_domain_assembly_open");
		log_print(INFO, "Loaded: il2cpp_domain_assembly_open");
		*(void**)(&domain_get_assemblies) = dlsym(imagehandle, "il2cpp_domain_get_assemblies");
		log_print(INFO, "Loaded: il2cpp_domain_get_assemblies");
		*(void**)(&exception_from_name_msg) = dlsym(imagehandle, "il2cpp_exception_from_name_msg");
		log_print(INFO, "Loaded: il2cpp_exception_from_name_msg");
		*(void**)(&get_exception_argument_null) = dlsym(imagehandle, "il2cpp_get_exception_argument_null");
		log_print(INFO, "Loaded: il2cpp_get_exception_argument_null");
		*(void**)(&format_exception) = dlsym(imagehandle, "il2cpp_format_exception");
		log_print(INFO, "Loaded: il2cpp_format_exception");
		*(void**)(&format_stack_trace) = dlsym(imagehandle, "il2cpp_format_stack_trace");
		log_print(INFO, "Loaded: il2cpp_format_stack_trace");
		*(void**)(&unhandled_exception) = dlsym(imagehandle, "il2cpp_unhandled_exception");
		log_print(INFO, "Loaded: il2cpp_unhandled_exception");
		*(void**)(&field_get_flags) = dlsym(imagehandle, "il2cpp_field_get_flags");
		log_print(INFO, "Loaded: il2cpp_field_get_flags");
		*(void**)(&field_get_name) = dlsym(imagehandle, "il2cpp_field_get_name");
		log_print(INFO, "Loaded: il2cpp_field_get_name");
		*(void**)(&field_get_parent) = dlsym(imagehandle, "il2cpp_field_get_parent");
		log_print(INFO, "Loaded: il2cpp_field_get_parent");
		*(void**)(&field_get_offset) = dlsym(imagehandle, "il2cpp_field_get_offset");
		log_print(INFO, "Loaded: il2cpp_field_get_offset");
		*(void**)(&field_get_type) = dlsym(imagehandle, "il2cpp_field_get_type");
		log_print(INFO, "Loaded: il2cpp_field_get_type");
		*(void**)(&field_get_value) = dlsym(imagehandle, "il2cpp_field_get_value");
		log_print(INFO, "Loaded: il2cpp_field_get_value");
		*(void**)(&field_get_value_object) = dlsym(imagehandle, "il2cpp_field_get_value_object");
		log_print(INFO, "Loaded: il2cpp_field_get_value_object");
		*(void**)(&field_has_attribute) = dlsym(imagehandle, "il2cpp_field_has_attribute");
		log_print(INFO, "Loaded: il2cpp_field_has_attribute");
		*(void**)(&field_set_value) = dlsym(imagehandle, "il2cpp_field_set_value");
		log_print(INFO, "Loaded: il2cpp_field_set_value");
		*(void**)(&field_static_get_value) = dlsym(imagehandle, "il2cpp_field_static_get_value");
		log_print(INFO, "Loaded: il2cpp_field_static_get_value");
		*(void**)(&field_static_set_value) = dlsym(imagehandle, "il2cpp_field_static_set_value");
		log_print(INFO, "Loaded: il2cpp_field_static_set_value");
		*(void**)(&field_set_value_object) = dlsym(imagehandle, "il2cpp_field_set_value_object");
		log_print(INFO, "Loaded: il2cpp_field_set_value_object");
		*(void**)(&gc_collect) = dlsym(imagehandle, "il2cpp_gc_collect");
		log_print(INFO, "Loaded: il2cpp_gc_collect");
		*(void**)(&gc_collect_a_little) = dlsym(imagehandle, "il2cpp_gc_collect_a_little");
		log_print(INFO, "Loaded: il2cpp_gc_collect_a_little");
		*(void**)(&gc_disable) = dlsym(imagehandle, "il2cpp_gc_disable");
		log_print(INFO, "Loaded: il2cpp_gc_disable");
		*(void**)(&gc_enable) = dlsym(imagehandle, "il2cpp_gc_enable");
		log_print(INFO, "Loaded: il2cpp_gc_enable");
		*(void**)(&gc_is_disabled) = dlsym(imagehandle, "il2cpp_gc_is_disabled");
		log_print(INFO, "Loaded: il2cpp_gc_is_disabled");
		*(void**)(&gc_get_used_size) = dlsym(imagehandle, "il2cpp_gc_get_used_size");
		log_print(INFO, "Loaded: il2cpp_gc_get_used_size");
		*(void**)(&gc_get_heap_size) = dlsym(imagehandle, "il2cpp_gc_get_heap_size");
		log_print(INFO, "Loaded: il2cpp_gc_get_heap_size");
		*(void**)(&gc_wbarrier_set_field) = dlsym(imagehandle, "il2cpp_gc_wbarrier_set_field");
		log_print(INFO, "Loaded: il2cpp_gc_wbarrier_set_field");
		*(void**)(&gchandle_new) = dlsym(imagehandle, "il2cpp_gchandle_new");
		log_print(INFO, "Loaded: il2cpp_gchandle_new");
		*(void**)(&gchandle_new_weakref) = dlsym(imagehandle, "il2cpp_gchandle_new_weakref");
		log_print(INFO, "Loaded: il2cpp_gchandle_new_weakref");
		*(void**)(&gchandle_get_target ) = dlsym(imagehandle, "il2cpp_gchandle_get_target ");
		log_print(INFO, "Loaded: il2cpp_gchandle_get_target ");
		*(void**)(&gchandle_free) = dlsym(imagehandle, "il2cpp_gchandle_free");
		log_print(INFO, "Loaded: il2cpp_gchandle_free");
		*(void**)(&unity_liveness_calculation_begin) = dlsym(imagehandle, "il2cpp_unity_liveness_calculation_begin");
		log_print(INFO, "Loaded: il2cpp_unity_liveness_calculation_begin");
		*(void**)(&unity_liveness_calculation_end) = dlsym(imagehandle, "il2cpp_unity_liveness_calculation_end");
		log_print(INFO, "Loaded: il2cpp_unity_liveness_calculation_end");
		*(void**)(&unity_liveness_calculation_from_root) = dlsym(imagehandle, "il2cpp_unity_liveness_calculation_from_root");
		log_print(INFO, "Loaded: il2cpp_unity_liveness_calculation_from_root");
		*(void**)(&unity_liveness_calculation_from_statics) = dlsym(imagehandle, "il2cpp_unity_liveness_calculation_from_statics");
		log_print(INFO, "Loaded: il2cpp_unity_liveness_calculation_from_statics");
		*(void**)(&method_get_return_type) = dlsym(imagehandle, "il2cpp_method_get_return_type");
		log_print(INFO, "Loaded: il2cpp_method_get_return_type");
		*(void**)(&method_get_declaring_type) = dlsym(imagehandle, "il2cpp_method_get_declaring_type");
		log_print(INFO, "Loaded: il2cpp_method_get_declaring_type");
		*(void**)(&method_get_name) = dlsym(imagehandle, "il2cpp_method_get_name");
		log_print(INFO, "Loaded: il2cpp_method_get_name");
		*(void**)(&method_get_from_reflection) = dlsym(imagehandle, "il2cpp_method_get_from_reflection");
		log_print(INFO, "Loaded: il2cpp_method_get_from_reflection");
		*(void**)(&method_get_object) = dlsym(imagehandle, "il2cpp_method_get_object");
		log_print(INFO, "Loaded: il2cpp_method_get_object");
		*(void**)(&method_is_generic) = dlsym(imagehandle, "il2cpp_method_is_generic");
		log_print(INFO, "Loaded: il2cpp_method_is_generic");
		*(void**)(&method_is_inflated) = dlsym(imagehandle, "il2cpp_method_is_inflated");
		log_print(INFO, "Loaded: il2cpp_method_is_inflated");
		*(void**)(&method_is_instance) = dlsym(imagehandle, "il2cpp_method_is_instance");
		log_print(INFO, "Loaded: il2cpp_method_is_instance");
		*(void**)(&method_get_param_count) = dlsym(imagehandle, "il2cpp_method_get_param_count");
		log_print(INFO, "Loaded: il2cpp_method_get_param_count");
		*(void**)(&method_get_param) = dlsym(imagehandle, "il2cpp_method_get_param");
		log_print(INFO, "Loaded: il2cpp_method_get_param");
		*(void**)(&method_get_class) = dlsym(imagehandle, "il2cpp_method_get_class");
		log_print(INFO, "Loaded: il2cpp_method_get_class");
		*(void**)(&method_has_attribute) = dlsym(imagehandle, "il2cpp_method_has_attribute");
		log_print(INFO, "Loaded: il2cpp_method_has_attribute");
		*(void**)(&method_get_flags) = dlsym(imagehandle, "il2cpp_method_get_flags");
		log_print(INFO, "Loaded: il2cpp_method_get_flags");
		*(void**)(&method_get_token) = dlsym(imagehandle, "il2cpp_method_get_token");
		log_print(INFO, "Loaded: il2cpp_method_get_token");
		*(void**)(&method_get_param_name) = dlsym(imagehandle, "il2cpp_method_get_param_name");
		log_print(INFO, "Loaded: il2cpp_method_get_param_name");
		*(void**)(&profiler_install) = dlsym(imagehandle, "il2cpp_profiler_install");
		log_print(INFO, "Loaded: il2cpp_profiler_install");
		*(void**)(&profiler_set_events) = dlsym(imagehandle, "il2cpp_profiler_set_events");
		log_print(INFO, "Loaded: il2cpp_profiler_set_events");
		*(void**)(&profiler_install_enter_leave) = dlsym(imagehandle, "il2cpp_profiler_install_enter_leave");
		log_print(INFO, "Loaded: il2cpp_profiler_install_enter_leave");
		*(void**)(&profiler_install_allocation) = dlsym(imagehandle, "il2cpp_profiler_install_allocation");
		log_print(INFO, "Loaded: il2cpp_profiler_install_allocation");
		*(void**)(&profiler_install_gc) = dlsym(imagehandle, "il2cpp_profiler_install_gc");
		log_print(INFO, "Loaded: il2cpp_profiler_install_gc");
		*(void**)(&profiler_install_fileio) = dlsym(imagehandle, "il2cpp_profiler_install_fileio");
		log_print(INFO, "Loaded: il2cpp_profiler_install_fileio");
		*(void**)(&profiler_install_thread) = dlsym(imagehandle, "il2cpp_profiler_install_thread");
		log_print(INFO, "Loaded: il2cpp_profiler_install_thread");
		*(void**)(&property_get_flags) = dlsym(imagehandle, "il2cpp_property_get_flags");
		log_print(INFO, "Loaded: il2cpp_property_get_flags");
		*(void**)(&property_get_get_method) = dlsym(imagehandle, "il2cpp_property_get_get_method");
		log_print(INFO, "Loaded: il2cpp_property_get_get_method");
		*(void**)(&property_get_set_method) = dlsym(imagehandle, "il2cpp_property_get_set_method");
		log_print(INFO, "Loaded: il2cpp_property_get_set_method");
		*(void**)(&property_get_name) = dlsym(imagehandle, "il2cpp_property_get_name");
		log_print(INFO, "Loaded: il2cpp_property_get_name");
		*(void**)(&property_get_parent) = dlsym(imagehandle, "il2cpp_property_get_parent");
		log_print(INFO, "Loaded: il2cpp_property_get_parent");
		*(void**)(&object_get_class) = dlsym(imagehandle, "il2cpp_object_get_class");
		log_print(INFO, "Loaded: il2cpp_object_get_class");
		*(void**)(&object_get_size) = dlsym(imagehandle, "il2cpp_object_get_size");
		log_print(INFO, "Loaded: il2cpp_object_get_size");
		*(void**)(&object_get_virtual_method) = dlsym(imagehandle, "il2cpp_object_get_virtual_method");
		log_print(INFO, "Loaded: il2cpp_object_get_virtual_method");
		*(void**)(&object_new) = dlsym(imagehandle, "il2cpp_object_new");
		log_print(INFO, "Loaded: il2cpp_object_new");
		*(void**)(&object_unbox) = dlsym(imagehandle, "il2cpp_object_unbox");
		log_print(INFO, "Loaded: il2cpp_object_unbox");
		*(void**)(&value_box) = dlsym(imagehandle, "il2cpp_value_box");
		log_print(INFO, "Loaded: il2cpp_value_box");
		*(void**)(&monitor_enter) = dlsym(imagehandle, "il2cpp_monitor_enter");
		log_print(INFO, "Loaded: il2cpp_monitor_enter");
		*(void**)(&monitor_try_enter) = dlsym(imagehandle, "il2cpp_monitor_try_enter");
		log_print(INFO, "Loaded: il2cpp_monitor_try_enter");
		*(void**)(&monitor_exit) = dlsym(imagehandle, "il2cpp_monitor_exit");
		log_print(INFO, "Loaded: il2cpp_monitor_exit");
		*(void**)(&monitor_pulse) = dlsym(imagehandle, "il2cpp_monitor_pulse");
		log_print(INFO, "Loaded: il2cpp_monitor_pulse");
		*(void**)(&monitor_pulse_all) = dlsym(imagehandle, "il2cpp_monitor_pulse_all");
		log_print(INFO, "Loaded: il2cpp_monitor_pulse_all");
		*(void**)(&monitor_wait) = dlsym(imagehandle, "il2cpp_monitor_wait");
		log_print(INFO, "Loaded: il2cpp_monitor_wait");
		*(void**)(&monitor_try_wait) = dlsym(imagehandle, "il2cpp_monitor_try_wait");
		log_print(INFO, "Loaded: il2cpp_monitor_try_wait");
		*(void**)(&runtime_invoke) = dlsym(imagehandle, "il2cpp_runtime_invoke");
		log_print(INFO, "Loaded: il2cpp_runtime_invoke");
		*(void**)(&runtime_invoke_convert_args) = dlsym(imagehandle, "il2cpp_runtime_invoke_convert_args");
		log_print(INFO, "Loaded: il2cpp_runtime_invoke_convert_args");
		*(void**)(&runtime_class_init) = dlsym(imagehandle, "il2cpp_runtime_class_init");
		log_print(INFO, "Loaded: il2cpp_runtime_class_init");
		*(void**)(&runtime_object_init) = dlsym(imagehandle, "il2cpp_runtime_object_init");
		log_print(INFO, "Loaded: il2cpp_runtime_object_init");
		*(void**)(&runtime_object_init_exception) = dlsym(imagehandle, "il2cpp_runtime_object_init_exception");
		log_print(INFO, "Loaded: il2cpp_runtime_object_init_exception");
		*(void**)(&runtime_unhandled_exception_policy_set) = dlsym(imagehandle, "il2cpp_runtime_unhandled_exception_policy_set");
		log_print(INFO, "Loaded: il2cpp_runtime_unhandled_exception_policy_set");
		*(void**)(&string_length) = dlsym(imagehandle, "il2cpp_string_length");
		log_print(INFO, "Loaded: il2cpp_string_length");
		*(void**)(&string_chars) = dlsym(imagehandle, "il2cpp_string_chars");
		log_print(INFO, "Loaded: il2cpp_string_chars");
		*(void**)(&string_new) = dlsym(imagehandle, "il2cpp_string_new");
		log_print(INFO, "Loaded: il2cpp_string_new");
		*(void**)(&string_new_len) = dlsym(imagehandle, "il2cpp_string_new_len");
		log_print(INFO, "Loaded: il2cpp_string_new_len");
		*(void**)(&string_new_utf16) = dlsym(imagehandle, "il2cpp_string_new_utf16");
		log_print(INFO, "Loaded: il2cpp_string_new_utf16");
		*(void**)(&string_new_wrapper) = dlsym(imagehandle, "il2cpp_string_new_wrapper");
		log_print(INFO, "Loaded: il2cpp_string_new_wrapper");
		*(void**)(&string_intern) = dlsym(imagehandle, "il2cpp_string_intern");
		log_print(INFO, "Loaded: il2cpp_string_intern");
		*(void**)(&string_is_interned) = dlsym(imagehandle, "il2cpp_string_is_interned");
		log_print(INFO, "Loaded: il2cpp_string_is_interned");
		*(void**)(&thread_current) = dlsym(imagehandle, "il2cpp_thread_current");
		log_print(INFO, "Loaded: il2cpp_thread_current");
		*(void**)(&thread_attach) = dlsym(imagehandle, "il2cpp_thread_attach");
		log_print(INFO, "Loaded: il2cpp_thread_attach");
		*(void**)(&thread_detach) = dlsym(imagehandle, "il2cpp_thread_detach");
		log_print(INFO, "Loaded: il2cpp_thread_detach");
		*(void**)(&thread_get_all_attached_threads) = dlsym(imagehandle, "il2cpp_thread_get_all_attached_threads");
		log_print(INFO, "Loaded: il2cpp_thread_get_all_attached_threads");
		*(void**)(&is_vm_thread) = dlsym(imagehandle, "il2cpp_is_vm_thread");
		log_print(INFO, "Loaded: il2cpp_is_vm_thread");
		*(void**)(&current_thread_walk_frame_stack) = dlsym(imagehandle, "il2cpp_current_thread_walk_frame_stack");
		log_print(INFO, "Loaded: il2cpp_current_thread_walk_frame_stack");
		*(void**)(&thread_walk_frame_stack) = dlsym(imagehandle, "il2cpp_thread_walk_frame_stack");
		log_print(INFO, "Loaded: il2cpp_thread_walk_frame_stack");
		*(void**)(&current_thread_get_top_frame) = dlsym(imagehandle, "il2cpp_current_thread_get_top_frame");
		log_print(INFO, "Loaded: il2cpp_current_thread_get_top_frame");
		*(void**)(&thread_get_top_frame) = dlsym(imagehandle, "il2cpp_thread_get_top_frame");
		log_print(INFO, "Loaded: il2cpp_thread_get_top_frame");
		*(void**)(&current_thread_get_frame_at) = dlsym(imagehandle, "il2cpp_current_thread_get_frame_at");
		log_print(INFO, "Loaded: il2cpp_current_thread_get_frame_at");
		*(void**)(&thread_get_frame_at) = dlsym(imagehandle, "il2cpp_thread_get_frame_at");
		log_print(INFO, "Loaded: il2cpp_thread_get_frame_at");
		*(void**)(&current_thread_get_stack_depth) = dlsym(imagehandle, "il2cpp_current_thread_get_stack_depth");
		log_print(INFO, "Loaded: il2cpp_current_thread_get_stack_depth");
		*(void**)(&thread_get_stack_depth) = dlsym(imagehandle, "il2cpp_thread_get_stack_depth");
		log_print(INFO, "Loaded: il2cpp_thread_get_stack_depth");
		*(void**)(&type_get_object) = dlsym(imagehandle, "il2cpp_type_get_object");
		log_print(INFO, "Loaded: il2cpp_type_get_object");
		*(void**)(&type_get_type) = dlsym(imagehandle, "il2cpp_type_get_type");
		log_print(INFO, "Loaded: il2cpp_type_get_type");
		*(void**)(&type_get_class_or_element_class) = dlsym(imagehandle, "il2cpp_type_get_class_or_element_class");
		log_print(INFO, "Loaded: il2cpp_type_get_class_or_element_class");
		*(void**)(&type_get_name) = dlsym(imagehandle, "il2cpp_type_get_name");
		log_print(INFO, "Loaded: il2cpp_type_get_name");
		*(void**)(&type_is_byref) = dlsym(imagehandle, "il2cpp_type_is_byref");
		log_print(INFO, "Loaded: il2cpp_type_is_byref");
		*(void**)(&type_get_attrs) = dlsym(imagehandle, "il2cpp_type_get_attrs");
		log_print(INFO, "Loaded: il2cpp_type_get_attrs");
		*(void**)(&type_equals) = dlsym(imagehandle, "il2cpp_type_equals");
		log_print(INFO, "Loaded: il2cpp_type_equals");
		*(void**)(&type_get_assembly_qualified_name) = dlsym(imagehandle, "il2cpp_type_get_assembly_qualified_name");
		log_print(INFO, "Loaded: il2cpp_type_get_assembly_qualified_name");
		*(void**)(&image_get_assembly) = dlsym(imagehandle, "il2cpp_image_get_assembly");
		log_print(INFO, "Loaded: il2cpp_image_get_assembly");
		*(void**)(&image_get_name) = dlsym(imagehandle, "il2cpp_image_get_name");
		log_print(INFO, "Loaded: il2cpp_image_get_name");
		*(void**)(&image_get_filename) = dlsym(imagehandle, "il2cpp_image_get_filename");
		log_print(INFO, "Loaded: il2cpp_image_get_filename");
		*(void**)(&image_get_entry_point) = dlsym(imagehandle, "il2cpp_image_get_entry_point");
		log_print(INFO, "Loaded: il2cpp_image_get_entry_point");
		*(void**)(&image_get_class_count) = dlsym(imagehandle, "il2cpp_image_get_class_count");
		log_print(INFO, "Loaded: il2cpp_image_get_class_count");
		*(void**)(&image_get_class) = dlsym(imagehandle, "il2cpp_image_get_class");
		log_print(INFO, "Loaded: il2cpp_image_get_class");
		*(void**)(&capture_memory_snapshot) = dlsym(imagehandle, "il2cpp_capture_memory_snapshot");
		log_print(INFO, "Loaded: il2cpp_capture_memory_snapshot");
		*(void**)(&free_captured_memory_snapshot) = dlsym(imagehandle, "il2cpp_free_captured_memory_snapshot");
		log_print(INFO, "Loaded: il2cpp_free_captured_memory_snapshot");
		*(void**)(&set_find_plugin_callback) = dlsym(imagehandle, "il2cpp_set_find_plugin_callback");
		log_print(INFO, "Loaded: il2cpp_set_find_plugin_callback");
		*(void**)(&register_log_callback) = dlsym(imagehandle, "il2cpp_register_log_callback");
		log_print(INFO, "Loaded: il2cpp_register_log_callback");
		*(void**)(&debugger_set_agent_options) = dlsym(imagehandle, "il2cpp_debugger_set_agent_options");
		log_print(INFO, "Loaded: il2cpp_debugger_set_agent_options");
		*(void**)(&is_debugger_attached) = dlsym(imagehandle, "il2cpp_is_debugger_attached");
		log_print(INFO, "Loaded: il2cpp_is_debugger_attached");
		*(void**)(&unity_install_unitytls_interface) = dlsym(imagehandle, "il2cpp_unity_install_unitytls_interface");
		log_print(INFO, "Loaded: il2cpp_unity_install_unitytls_interface");
		*(void**)(&custom_attrs_from_class) = dlsym(imagehandle, "il2cpp_custom_attrs_from_class");
		log_print(INFO, "Loaded: il2cpp_custom_attrs_from_class");
		*(void**)(&custom_attrs_from_method) = dlsym(imagehandle, "il2cpp_custom_attrs_from_method");
		log_print(INFO, "Loaded: il2cpp_custom_attrs_from_method");
		*(void**)(&custom_attrs_get_attr) = dlsym(imagehandle, "il2cpp_custom_attrs_get_attr");
		log_print(INFO, "Loaded: il2cpp_custom_attrs_get_attr");
		*(void**)(&custom_attrs_has_attr) = dlsym(imagehandle, "il2cpp_custom_attrs_has_attr");
		log_print(INFO, "Loaded: il2cpp_custom_attrs_has_attr");
		*(void**)(&custom_attrs_construct) = dlsym(imagehandle, "il2cpp_custom_attrs_construct");
		log_print(INFO, "Loaded: il2cpp_custom_attrs_construct");
		*(void**)(&custom_attrs_free) = dlsym(imagehandle, "il2cpp_custom_attrs_free");
		log_print(INFO, "Loaded: il2cpp_custom_attrs_free");

		// MANUALLY DEFINED CONST DEFINITIONS
		*(void**)(&class_get_type_const) = dlsym(imagehandle, "il2cpp_class_get_type");
		log_print(INFO, "Loaded: il2cpp_class_get_type CONST VERSION!");
		*(void**)(&class_get_name_const) = dlsym(imagehandle, "il2cpp_class_get_name");
		log_print(INFO, "Loaded: il2cpp_class_get_name CONST VERSION!");

        dlclose(imagehandle);
        initialized = true;
        log_print(INFO, "il2cpp_functions: Init: Successfully loaded all il2cpp functions!");
    }
}

#endif /* IL2CPP_FUNCTIONS_H */